//栈的顺序存储结构，顺序表类
#include <iostream>
#include<conio.h>
#include <iomanip>
#include <string>
using namespace std;
//------------------------------栈的顺序存储结构---------------------------------------------
typedef char  ElemType;     // 数据元素的类型
const int MAXSIZE=20;     // 数组的容量
class SqStack
  { private:
      ElemType  elem[MAXSIZE];
      int top;
    public:
      SqStack( void);
      ~SqStack(){};
      int  SqStack::SetEmpty();
      void  SqStack::push(  ElemType e);
      ElemType SqStack::pop();
      void SqStack::PrintOut();
     int SqStack::IsEmpty(void)const ;
     void  GongNeng();    
};
void  SqStack::GongNeng( )
{
 char ch=1;
			   char x;
			   int i=0;
			 
			 
			   do{
				   cout<<" 入栈，数据 ch=?\n"<<endl;
				   cin>>ch;
				   switch(ch)
				   {
				   case '(':{
					     push(ch);
						 i++;
						 break;
							}
				   case ')':

					   if(i==0)
					   {
						   
						   i++;
						   ch='#';
					      break;
					   }else{
					  
					     x=pop();
						
					    i--;
                                          }
					   break;
							}
				   	
							

				   }
			   }while(ch!='#')
			   if(IsEmpty()==1&&i==0)
			   {
			      cout<<" 符合 "<<endl;
			   }else
			   {
			      cout<<" 不符合 "<<endl;
			   }
			   
}
//-------------------------------------------------------------
SqStack::SqStack( void):top(0){ }
int  SqStack::SetEmpty()
   { return top==0;
   }
void  SqStack::push(  ElemType e)
{ 
//将此成员函数补充完整，使得程序能够正确运行
	if(top==MAXSIZE)
	{
		 cout<<"栈已满" <<endl;
		return ;
	}else{
	 elem[top++]=e;
	 
	}
}
ElemType SqStack::pop()
 {
//将此成员函数补充完整，使得程序能够正确运行
	 if(IsEmpty()==1)
	 {
	 return '?';
	 }else
	 {
		 char e;
	     e=elem[--top];
		 return e;
	 }
}
void SqStack::PrintOut()
  {int k;
   cout<<"\n PrintOut Data:\n" ;
   
   for(k=top; k>=1;k--) cout<<setw(6)<<elem[k-1];
   cout<<endl;
 }
int SqStack::IsEmpty(void)const
{ if(top==0) return 1;
     else return 0;
 }
//---------------------------------------------------------------------------
int main(int argc, char* argv[])
{ int i,k;
  ElemType e,x;
  SqStack  as;
   cout<<"\n                           栈的顺序存储结构实现";
  do{
    cout<<"\n\n";
    cout<<"\n\n    1.括号配对";
    cout<<"\n\n    2..结束程序";
    cout<<"\n******************************** ";
    cout<<"\n    请输入你的选择(1,2,3,4,5,6)";    cin>>k;
    switch(k){
       case 1:{
		as.GongNeng();	
       case 2:{  

             }break;
       default:break;
         } 
     cout<<"\n--------------------------------- ";
    }while(k>=1&&k<2);
  cout<<"\n          再见!";
  cout<<"\n     按任意键，返回。";
  _getch(); return 0;
}
