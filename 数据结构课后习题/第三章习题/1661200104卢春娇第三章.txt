第三章应用题：
2.设计一个有序顺序表类，即表中的数据元素按数据元素值递增有序，实现以下函数。
（1）把给定值e插入有序表中。
template<class ElemType>
Status SeqList<ElemType>::InsertElem(const ElemType &e)
{
int i=length;
if(length==MAXSIZE)
{
cout<<"OVER_FLOW"<<endl;  //顺序表已满，返回OVER_FLOW
}
else{
for(i>0&&elems[i-1]>e){
elems[i]=elems[i-1];  //插入位置之后元素右移
i--;
}
elems[i]=e;
length++;  //插入后个数加1
cout<<"成功！"<<endl;
}
}


（2）删除值为e的所有数据元素。
template<class ElemType>
Status SeqList<ElemType>::DeleteElem(ElemType &e)
{
int i=0,j;
while(i <= length - 1 && elems[i] < e)
      i++;
if (i <= length - 1 && elems[i] ==e) {
      j=i+1;
      while(j<= length - 1 && elems[j]== e)
      j++;
      while(j<= length) {
      elems[i++] = elems[j++] ;}
      length = length + i - j;}
}
}