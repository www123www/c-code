
/*

2.设计一个有序顺序表类，即表中的数据元素按数据元素值递增有序，实现以下函数。

（1）把给定值e插入有序表中。

（2）删除值为e的所有数据元素。

*/

#include <iostream>
using namespace std;
const int MAXSIZE=3; 

class Sqlist
{
private:
	int  elem[MAXSIZE];
	int length;
public:
		Sqlist( void);
		~Sqlist(){ };
		void  SetData();
		void  Insert( int e);
		void Delet(int i);
		void PrintOut();
};

void Sqlist::PrintOut()  //输出
{ 
	
	
	cout<<"排序"<<endl;
	for(int i=0; i<length;i++)      
	{ 
		cout<<elem[i]<<"  ";
	}
}

Sqlist::Sqlist( ) { length=0;}

void  Sqlist::SetData( )     //建立顺序链 
{
	cout<<"\n 输入个数length"<<endl;
	cin>>length;
	int j,k;
	bool l=0;
    if(length<= MAXSIZE)
	{	cout<<"\n 从小到大输入"<<endl;
		for(int i=0;i<length;i++)
		{ 
			cout<<"\n 输入：";  
			cin>>j;
			if(l==0)
			{
			  l=1;
			  k=i;
			  elem[i]=j;
				
			}else if(k<=j)
			{ 
				elem[i]=j;
			
			}else 
			{cout<<"\n 输入的数小于之前的数(不按规则输入)";
				    i--;
			} 
				  

			
			
		}
	} 
	else cout<<"\nlength is bigger than MAXSIZE";
	
}

void  Sqlist::Insert( int e) //插入
{
	

	if(length==MAXSIZE)  
	{
		cout<<"通讯录位置已满"<<endl;
	  return ;
	}else 
	{
	for(int j=0;j<length;j++)    
		
		if(e<elem[j])        
		{
		  for(int k=length;k>=j+1;k--)   
		  {
		     elem[k]=elem[k-1];
		  }elem[j]=e;
			length++;      
			return;
		}
	}
	elem[length]=e;   
	length++;
}

void Sqlist::Delet(int e)//删除
{
	
	
	

	if(length<=0)
	
	{	
		cout<<"顺序表不存在内容 "<<endl;
	    return ;
	}
	else{
		
	 for(int j=0;j<length;j++)
	 {
	    if(elem[j]==e) 
	    {	
		for(int k=j;k<length;k++)  
		elem[k]=elem[k+1];
		length--;
		j--;      
		}
	 }
	}
}

int main()
{
	Sqlist as;
	as.SetData(); 
    as.PrintOut();
    int a;
    cout<<"请输入要插入的数 "<<endl;
    cin>>a;
	as.Insert(a);
    as.PrintOut();
    cout<<"输入要删除的数 "<<endl;
    cin>>a;
	as.Delet(a);
    as.PrintOut();
	
    return 0;
}