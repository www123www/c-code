#include <iostream>
using namespace std;
const int MAXSIZE=3;
class Sqlist
{
private:
	int  elem[MAXSIZE];
	int length;
public:
		Sqlist( void);
		~Sqlist(){ };
		void  SetData();
		void  Insert( int e);
		void Delet(int i);
		void PrintOut();
};
void Sqlist::PrintOut()  //输出
 {
	cout<<"排序"<<endl;
	for(int k=0; k<length;k++)
	{
		cout<<elem[k]<<"  ";
	}
 }
Sqlist::Sqlist( ) { length=0;}
void  Sqlist::SetData( )     //初步建立顺序链
{
	cout<<"\n 输入值的个数："<<endl;
	cin>>length;
	int a,b;
	bool c=0;
    if(length<= MAXSIZE)
	{	cout<<"\n 请从小到大输入"<<endl;
		for(int i=0;i<length;i++)
		{
			cout<<"\n 输入：";
			cin>>a;
			if(c==0)
			{
			  c=1;
			  b=a;
			  elem[i]=a;

			}else if(b<=a)
			{
				elem[i]=a;

			}else
			{cout<<"\n 输入的数小于之前的数";
				    i--;
			}
		}
	} else cout<<"\nlength is bigger than MAXSIZE";

}
void  Sqlist::Insert( int e) //定值e插入
{


	if(length==MAXSIZE)  //判断是否到达最大值
	{
		cout<<"通讯录位置已满"<<endl;
	  return ;
	}else
	{
	for(int j=0;j<length;j++)     //遍历

		if(e<elem[j])
	{
		  for(int k=length;k>=j+1;k--)
		  {
		     elem[k]=elem[k-1];
		  }elem[j]=e;
			length++;
			return;
		}
	}
	elem[length]=e;
	length++;
}
void Sqlist::Delet(int e)//删除

{
	if(length<=0)
	{
		cout<<"顺序表不存在内容 "<<endl;//判断
	    return ;
	}
	else{

	 for(int j=0;j<length;j++)//遍历
	 {
	    if(elem[j]==e)
	    {
		for(int k=j;k<length;k++)  //进行删除，
		elem[k]=elem[k+1];
		length--;
		j--;      //删除后值的位置改变
		}
	 }
	}
}
int main()
{
	Sqlist as;
	as.SetData(); as.PrintOut();
        int a;
        cout<<"输入要插入的数 "<<endl;
        cin>>a;
	as.Insert(a);as.PrintOut();
        cout<<"输入要删除的数 "<<endl;
        cin>>a;
	as.Delet(a);as.PrintOut();
   return 0;
}
